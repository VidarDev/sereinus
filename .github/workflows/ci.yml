name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    NODE_VERSION: "22"
    PNPM_VERSION: "8"

jobs:
    # Code quality & linting
    lint:
        name: Lint & format check
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run eslint
              run: npm run lint

            - name: Check prettier formatting
              run: npm run format -- --check

            - name: TypeScript check
              run: npm run ts

    test-unit:
        name: Unit tests
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run unit tests
              run: npm run test:unit
              env:
                  NODE_ENV: test

            - name: Upload unit test coverage
              uses: codecov/codecov-action@v4
              with:
                  files: ./coverage/lcov.info
                  flags: unit
                  name: unit-tests

    # Build
    build:
        name: Build application
        runs-on: ubuntu-latest
        needs: [lint]
        timeout-minutes: 15

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Generate prisma client
              run: npm run prisma-generate

            - name: Build application
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-files
                  path: |
                      .next/
                      public/
                  retention-days: 1

    # Final quality gate
    quality-gate:
        name: Quality gate
        runs-on: ubuntu-latest
        needs: [lint, test-unit, test-integration, test-components, build]
        if: always()

        steps:
            - name: Check all jobs status
              run: |
                  if [[ "${{ needs.lint.result }}" != "success" ]]; then
                    echo "[ERROR] Linting failed"
                    exit 1
                  fi
                  if [[ "${{ needs.test-unit.result }}" != "success" ]]; then
                    echo "[ERROR] Unit tests failed"
                    exit 1
                  fi
                  if [[ "${{ needs.build.result }}" != "success" ]]; then
                    echo "[ERROR] Build failed"
                    exit 1
                  fi
                  echo "[DONE] All quality checks passed!"
